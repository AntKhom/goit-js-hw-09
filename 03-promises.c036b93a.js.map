{"mappings":"YAAA,IAAMA,EAAOC,SAASC,cAAc,SAepC,IAAMC,EAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MACtBC,QAAQC,IAAI,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,EAEtDI,EAAK,SAAAN,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MACpBC,QAAQC,IAAI,sBAAqCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,EAG3DN,EAAKW,iBAAiB,UAAU,SAACC,GArBjC,IAAiCN,EAsB/BM,EAAEC,kBAtB6BP,EAwBf,KAvBA,IAAIQ,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,MAERC,EAAO,K,GAERV,E,KAeiBe,KAAKlB,GAAImB,MAAMZ,E","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve('ok');\n      } else {\n        reject('no');\n      };\n    }, delay);\n  });\n  return promise;\n};\n  \nconst ok = ({ position, delay }) => {\n  console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\nconst no = ({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  };\n   \nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n//  console.log(e);\n  createPromise(2,1500).then(ok).catch(no);\n})"],"names":["$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$ok","param","position","delay","console","log","concat","$ce04d3a99e08e73b$var$no","addEventListener","e","preventDefault","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","catch"],"version":3,"file":"03-promises.c036b93a.js.map"}