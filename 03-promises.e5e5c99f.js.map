{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,SAepC,MAAMC,EAAK,EAACC,SAAEA,EAAQC,MAAEA,MACtBC,QAAQC,IAAI,uBAAqBH,QAAiBC,MAAU,EAExDG,EAAK,EAACJ,SAAEA,EAAQC,MAAEA,MACpBC,QAAQC,IAAI,sBAAoBH,QAAeC,MAAU,EAG7DL,EAAKS,iBAAiB,UAAWC,IArBjC,IAAiCL,EAsB/BK,EAAEC,kBAtB6BN,EAwBf,KAvBA,IAAIO,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,MAERC,EAAO,KAAK,GAEbT,EAAM,KAeWc,KAAKhB,GAAIiB,MAAMZ,EAAG","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve('ok');\n      } else {\n        reject('no');\n      };\n    }, delay);\n  });\n  return promise;\n};\n  \nconst ok = ({ position, delay }) => {\n  console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\nconst no = ({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  };\n   \nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n//  console.log(e);\n  createPromise(2,1500).then(ok).catch(no);\n})"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$ok","position","delay","console","log","$47d4ff9957288465$var$no","addEventListener","e","preventDefault","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","catch"],"version":3,"file":"03-promises.e5e5c99f.js.map"}