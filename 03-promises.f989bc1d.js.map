{"mappings":"AACA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,qBACnCE,UAAWH,SAASC,cAAc,oBAClCG,YAAaJ,SAASC,cAAc,uBAWtC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,CAAEM,SAAAT,E,MAAUC,IAEpBG,EAAO,CAAEK,SAAAT,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAjBbT,EAAKI,WAAWc,aAAa,OAAO,OACpClB,EAAKK,UAAUa,aAAa,OAAO,OAoBnC,MAAMC,EAAiB,EAAGF,SAAAG,EAAQX,MAAEA,MAClCY,QAAQC,IAAI,uBAAqBF,QAAiBX,MAAU,EAExDc,EAAgB,EAAGN,SAAAO,EAAQf,MAAEA,MAC/BY,QAAQC,IAAI,sBAAoBE,QAAef,MAAU,EAG7DT,EAAKC,KAAKwB,iBAAiB,UAAWC,IACpCA,EAAEC,iBACF,MAAMC,EAAS,CACbnB,OAAQiB,EAAEG,OAAOpB,MAAMqB,MACvBC,MAAOL,EAAEG,OAAOE,KAAKD,MACrBE,QAASN,EAAEG,OAAOG,OAAOF,OAE3BG,EAAeL,GAGfP,QAAQC,IAAIM,EAAO,IAKrB,MAAMK,EAAiB,EAACxB,MAAEA,EAAKsB,KAAEA,EAAIC,OAAEA,MACrC,MAAME,EAAW,GACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAQG,GAAG,EAE3BD,EAASC,GAAK5B,EAAc4B,EAAG1B,GAC/BA,GAASsB,EAGbV,QAAQC,IAAIY,GACZxB,QAAQ0B,IAAIF,GAAUG,KAAKlB,GAAgBmB,MAAMf,EAAc","sources":["src/js/03-promises.js"],"sourcesContent":["\nconst refs = {\n  form: document.querySelector('.form'),\n  inputDelay: document.querySelector('input[name=delay]'),\n  inputStep: document.querySelector('input[name=step]'),\n  inputAmount: document.querySelector('input[name=amount]'),\n}\nconst position = 0;\nrefs.inputDelay.setAttribute('step','100');\nrefs.inputStep.setAttribute('step','100');\n\n// let delay = inputDelay.value;\n// const step = inputStep.value;\n// const amount = inputAmount.value;\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      };\n    }, delay);\n  });\n};\n  \nconst resolvePromise = ({ position, delay }) => {\n  console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\nconst rejectPromise = ({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n};\n   \nrefs.form.addEventListener('submit', (e) => {\n  e.preventDefault();\n  const values = { \n    delay: +e.target.delay.value,\n    step: +e.target.step.value,\n    amount: +e.target.amount.value,\n  };\n  makeArrPromise(values);\n  //console.log(makeArrPromise(values));\n\n  console.log(values);\n  \n  //createPromise(2,1500).then(resolvePromise).catch(rejectPromise);\n})\n\nconst makeArrPromise = ({ delay, step, amount }) => {\n  const promises = [];\n  for (let i = 0; i < amount; i+=1) {\n      //promises[i] = createPromise(5, 1000);\n      promises[i] = createPromise(i, delay);\n      delay += step;\n  };\n\n  console.log(promises);\n  Promise.all(promises).then(resolvePromise).catch(rejectPromise);\n};\n"],"names":["$47d4ff9957288465$var$refs","form","document","querySelector","inputDelay","inputStep","inputAmount","$47d4ff9957288465$var$createPromise","position1","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","setAttribute","$47d4ff9957288465$var$resolvePromise","position2","console","log","$47d4ff9957288465$var$rejectPromise","position3","addEventListener","e","preventDefault","values","target","value","step","amount","$47d4ff9957288465$var$makeArrPromise","promises","i","all","then","catch"],"version":3,"file":"03-promises.f989bc1d.js.map"}